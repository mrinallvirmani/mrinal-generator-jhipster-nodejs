entity Brand {
  id Long required,
  name String required,
  website String required,
  description String required,
  industry Industry required,
  createdAt ZonedDateTime required,
  createdBy Long required,
  updatedAt ZonedDateTime required,
  updatedBy Long required,
  isDeleted Boolean required
}

enum Industry {
  HEALTHCARE, TRAVEL, BEAUTY, NUTRITION, ELECTRONICS
}

entity ContactInfo {
  id Long required,
  brandId Long required,
  email String,
  phoneNumber String,
  website String
}

entity Location {
  id Long required,
  brandId Long required,
  country String,
  region String, // Optional (e.g., state or province)
  city String // Optional (if more granularity is needed)
}

entity SocialMediaAccount {
  id Long required,
  brandId Long required,
  platform String required,
  handle String required,
  profilePicture ImageBlob,
  followers Long required,
  authenticalFollowers Integer required,
  posts Long required,
  createdAt ZonedDateTime required,
  createdBy Long required,
  updatedAt ZonedDateTime required,
  updatedBy Long required,
  isDeleted Boolean required
}

entity FollowersTimeline {
  id Long required,
  accountId Long required,
  followers Long required,
  authenticalFollowers Integer required,
  timestamp ZonedDateTime required
}

entity FollowerAgeGroup {
  id Long required,
  accountId Long required,
  ageGroup String required, // Follower age group (e.g., '13-17', '18-24')
  followerCount Long required, // Number of followers in this age group
  timestamp Instant required // Timestamp for when the data was last updated
}

entity FollowerAgeGroupTimeline {
  id Long required,
  accountId Long required,
  ageGroup String required,
  followerCount Long required,
  timestamp Instant required
}

entity FollowerGender {
  id Long required,
  accountId Long required,
  gender GenderType required, // Gender of the followers (ENUM below)
  followerCount Long required, // Number of followers in this gender group
  timestamp Instant required
}

entity FollowerGenderTimeline {
  id Long required,
  accountId Long required,
  gender GenderType required,
  followerCount Long required,
  timestamp Instant required
}

entity FollowerGeography {
  id Long required,
  accountId Long required,
  country String required, // Follower's country (e.g., 'USA')
  region String, // Follower's region (Optional)
  city String,
  followerCount Long required, // Number of followers in this geography
  updatedAt Instant required
}

entity FollowerGeographyTimeline {
  id Long required,
  accountId Long required,
  country String required, // Follower's country (e.g., 'USA')
  region String, // Follower's region (Optional)
  city String,
  followerCount Long required, // Number of followers in this geography
  updatedAt Instant required
}

// Enumerations for gender
enum GenderType {
  MALE, FEMALE, NON_BINARY, OTHER, PREFER_NOT_TO_SAY
}

// Table for storing follower activity based on time intervals
entity FollowerActivity {
  accountId Long required,
  dayOfWeek DayOfWeekType required, // ENUM representing day of the week
  timeOfDay TimeInterval required, // ENUM representing time intervals (e.g., hourly slots)
  activeFollowersCount Long required, // Number of followers active during this time slot
  updatedAt Instant required // Timestamp for when the data was last updated
}

// Enumeration for day of the week
enum DayOfWeekType {
  MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY
}

// Enumeration for time intervals
enum TimeInterval {
  MIDNIGHT_TO_1AM,
  ONE_AM_TO_2AM,
  TWO_AM_TO_3AM,
  THREE_AM_TO_4AM,
  FOUR_AM_TO_5AM,
  FIVE_AM_TO_6AM,
  SIX_AM_TO_7AM,
  SEVEN_AM_TO_8AM,
  EIGHT_AM_TO_9AM,
  NINE_AM_TO_10AM,
  TEN_AM_TO_11AM,
  ELEVEN_AM_TO_NOON,
  NOON_TO_1PM,
  ONE_PM_TO_2PM,
  TWO_PM_TO_3PM,
  THREE_PM_TO_4PM,
  FOUR_PM_TO_5PM,
  FIVE_PM_TO_6PM,
  SIX_PM_TO_7PM,
  SEVEN_PM_TO_8PM,
  EIGHT_PM_TO_9PM,
  NINE_PM_TO_10PM,
  TEN_PM_TO_11PM,
  ELEVEN_PM_TO_MIDNIGHT
}

entity SocialMediaPerformance {
  id Long required,
  socialMediaAccountId Long required,
  totalProfileViews Long,
  emailContactTaps Long,
  phoneContactTaps Long,
  textMessageTaps Long,
  websiteLinkTaps Long,
  avgLikes Long,
  avgComments Long,
  avgEngagementRate Long,
  avgEngagementDepth Long,
  avgRelevanceScore Long,
  avgInfluenceScore Long,
  postingFrequency Integer, // Number of posts per month
  createdAt Instant required,
}

entity ContentAnalysis {
  id Long required,
  socialMediaAccountId Long required,
  topContentTypes String, // Top 3 content types (e.g., Image, Video)
  //topCreators String, // Top 3 creators
  //topContentTopics String, // Top 3 topics
  //topContentTones String // Top 3 tones
}

entity BrandCreators {
  brandId Long required,
  creatorId Long required,
  creatorRank Integer required,
  numberOfPosts Integer required
}

entity BrandTopics {
  brandId Long required,
  topic String required,
  topicRank Integer required,
  numberOfPosts Integer required,
  updatedAt ZonedDateTime required,
  views Long,
  likes Long,
  comments Long,
  shares Long,
  saves Long,
  engagementRate Double,
  engagementDepth Double,
  relevanceScore Double,
  influenceScore Double,
}

entity BrandContentType {
  brandId Long required,
  contentType String required, // promotional, awareness, informative
  contentRank Integer required,
  numberOfPosts Integer required,
  updatedAt ZonedDateTime required,
  views Long,
  likes Long,
  comments Long,
  shares Long,
  saves Long,
  engagementRate Double,
  engagementDepth Double,
  relevanceScore Double,
  influenceScore Double,
}

entity BrandTones {
  brandId Long required,
  tone String required,
  toneRank Integer required,
  numberOfPosts Integer required,
  updatedAt ZonedDateTime required,
  views Long,
  likes Long,
  comments Long,
  shares Long,
  saves Long,
  engagementRate Double,
  engagementDepth Double,
  relevanceScore Double,
  influenceScore Double,
}

entity Creator {
  creatorId Long required,
  platform String required,
  creatorName String required,
  creatorHandle String required
}

entity Post {
  id Long required,
  socialMediaAccountId Long required,
  mediaId String required,
  mediaLink String required,
  mediaTimestamp ZonedDateTime required,
  dayPosted DayOfWeekType, // E.g., "Monday"
  contentType String, // E.g., Image, Video
  contentTopic String, // E.g., Product Launch
  contentTone String, // E.g., Informative
  caption String required,
  transcript String,
  createdAt ZonedDateTime required,
}

entity PostMetrics {
  postId Long required,
  views Long,
  likes Long,
  comments Long,
  shares Long,
  saves Long
}

entity EngagementMetrics {
  id Long required,
  socialMediaAccountId Long required,
  creatorId Long, // Reference to Creator (if needed)
  likes Long required,
  comments Long required,
  shares Long required,
  createdAt ZonedDateTime required,
  createdBy Long required,
  updatedAt ZonedDateTime required,
  updatedBy Long required,
  isDeleted Boolean required
}


entity Collaborations {
  postId Long required,
  brandId Long required,
  creatorId Long required
}

entity PostTaggedAccounts {
  postId Long required,
  brandId Long required,
  creatorId Long required
}

entity User {
  id Long required,
  name String required,
  email String,
  phone String
}

entity Competition {
  id Long required,
  brandId Long required,
  competitor Long required,
  industry Industry required,
  createdAt ZonedDateTime required,
  createdBy Long required,
  isDeleted Boolean required
}

// Relationships
relationship OneToMany {
  Brand{socialMediaAccounts} to SocialMediaAccount{brand(id)}
  Brand{contacts} to ContactInfo{brand(id)}
  Brand{locations} to Location{brand(id)}
  Brand{topics} to BrandTopics{brand(id)}
  Brand{tones} to BrandTones{brand(id)}
  SocialMediaAccount{posts} to Post{socialMediaAccount(id)}
  Post{postMetrics} to PostMetrics{post(id)}
  Post{engagementMetrics} to EngagementMetrics{post(id)}
  SocialMediaAccount{socialMediaPerformance} to SocialMediaPerformance{socialMediaAccount(id)}
  SocialMediaAccount{contentAnalysis} to ContentAnalysis{socialMediaAccount(id)}
  SocialMediaAccount{followersTimeline} to FollowersTimeline{accountId}
  Creator{collaborations} to Collaborations{creatorId}
  PostTaggedAccounts{taggedAccounts} to Creator{creatorId}
  SocialMediaAccount{followerActivity} to FollowerActivity{accountId}
  FollowerGeography{followerGeographyTimeline} to FollowerGeographyTimeline{accountId}
  FollowerAgeGroup{followerAgeGroupTimeline} to FollowerAgeGroupTimeline{accountId}
  FollowerGender{followerGenderTimeline} to FollowerGenderTimeline{accountId}
}

// Bidirectional relationships
relationship ManyToOne {
  SocialMediaAccount{brand} to Brand
  ContactInfo{brand} to Brand
  Location{brand} to Brand
  SocialMediaAccount{brand} to Brand
  Post{socialMediaAccount} to SocialMediaAccount
  EngagementMetrics{socialMediaAccount} to SocialMediaAccount
  SocialMediaPerformance{socialMediaAccount} to SocialMediaAccount
  ContentAnalysis{socialMediaAccount} to SocialMediaAccount
  FollowersTimeline{socialMediaAccount} to SocialMediaAccount
  EngagementMetrics{creator} to Creator{engagementMetrics}
}

// Optional relationships
relationship OneToMany {
  Brand{competitions} to Competition{brandId}
  Brand{creators} to BrandCreators{brandId}
}

